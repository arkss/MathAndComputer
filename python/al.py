'''
[시간제한]

50 개의 테스트 케이스를 합쳐 10초.

[메모리제한]

1152MB

[문제]

어느 날, 외계인들이 나타났다. 첩보원들은 외계인이 여러 대의 우주선을 이끌고 지구를 침략하기 위한 공격을 준비하고 있다는 사실을 알아냈다.
 이들이 공격을 감행하기 전에 우리는 선제 공격을 하여 모든 우주선을 파괴하기로 결정하였다.

우리의 무기 중 외계인의 우주선을 파괴할 수 있는 유일한 무기는 미사일로서, 여러 종류의 한정된 수량의 미사일을 가지고 있다. 
미사일들은 종류별로 고유한 위력을 가지고 있으며, 이 미사일을 이용하여 외계 우주선에게 방어막의 세기 이상의 위력을 입히면 우주선은 파괴된다.

우리는 다음과 같은 추가 정보를 가질 수 있었다.

각 외계 우주선의 방어막의 세기는 모두 일정하다.
하나의 외계 우주선을 파괴할 때 사용할 수 있는 미사일은 최대 2발이다.
미사일은 매우 정교하게 만들어져서 절대로 빗나가지 않는다.
예를 들어, 외계 우주선 2대가 나타났으며 이들의 방어막의 세기가 10 이고, 보유하고 있는 미사일의 종류가 5 종류로서 위력이 각각 3, 5, 7, 10, 12 이며,
 위력 5에 해당하는 미사일은 2발, 나머지 미사일은 각각 1발을 보유하고 있다고 하자.

이 경우 위력 10의 미사일 1발로 외계 우주선 1대를 파괴하고, 위력 3의 미사일과 위력 7의 미사일을 함께 발사하여 나머지 우주선 1대를 파괴할 수 있다.
 물론 위력 5의 미사일은 2발이 있으므로 이 미사일 2발을 이용하여 파괴할 수도 있다.

하지만 위력 7의 미사일 1발만으로는 우주선을 파괴할 수 없으며, 마찬가지로 위력 3과 위력 5의 미사일을 함께 사용하여도 방어막의 세기에 못 미치므로 우주선을 파괴할 수 없다. 
또한, 한 우주선에 발사할 수 있는 미사일은 최대 2 이므로, 위력 3, 5, 7 의 미사일을 한 우주선을 목표로 발사할 수 없다.

한편, 위력 12의 미사일 1발, 또는 위력 5와 위력 7의 미사일을 함께 이용하여 우주선을 파괴할 수도 있지만, 
추후 2차 공격에 대비하기 위하여 가능한 한 미사일의 위력을 아끼는 방향으로 사용하기로 한다.

이러한 방법으로 외계 우주선의 공격을 막아낸다고 할 때, 모든 외계 우주선을 파괴하기 위해 사용될 미사일의 위력의 총합의 최솟값을 구하는 프로그램을 작성하여라.

[제한 조건]

외계 우주선의 총 수 : N

미사일의 종류의 수 : M

외계 우주선의 방어막의 세기 : B

라고 할 때 50 개의 입력에 대한 제한 조건은 다음과 같다.

처음 25 개의 입력에 대한 제한 조건

1 ≤ N ≤ 10
1 ≤ M ≤ 10
1 ≤ B ≤ 1000
1 ≤ 각 종류별 미사일 위력 ≤ 2000
1 ≤ 각 종류별 미사일 수량 ≤ 20
다음 25 개의 입력에 대한 제한 조건

1 ≤ N ≤ 100000
1 ≤ M ≤ 1000
1 ≤ B ≤ 10000
1 ≤ 각 종류별 미사일 위력 ≤ 20000
1 ≤ 각 종류별 미사일 수량 ≤ 200000
[입력]

첫 줄에 테스트 케이스의 개수 T가 주어지고 그 다음 줄부터 T 개의 테스트 케이스가 주어진다.

각 테스트 케이스는 M+1 줄로 이루어져 있다. 
각 테스트 케이스의 첫 줄에는 N, M, B 가 공백으로 구분되어 차례로 주어지며,
 그 다음 M 줄에 걸쳐 미사일의 종류 당 한 줄의 정보가 주어진다.
  이 M개의 줄 각각은 공백으로 구분된 두 개의 정수로 구성되어 있으며 앞의 정수는 미사일의 위력,
   뒤의 정수는 미사일의 수량을 뜻한다.

[출력]

총 T 줄이 출력된다. 각 줄은 #x 로 시작하고 (x 는 테스트 케이스 번호, 1부터 시작) 공백을 하나 둔 다음, 모든 외계 우주선을 파괴하기 위해 사용되는 미사일의 위력의 합의 최솟값을 출력한다. 불행하게도, 주어진 미사일로 외계 우주선을 전부 파괴하지 못하는 경우가 발생할 수 있다. 이 경우에는 -1 을 출력한다.

[입출력 예]

(입력)
'''



missile_power_list = []
missile_count_list = []
missile_dic = {}


count = input()
count = int(count)
for i in range(count):
    N, M, B = input().split()
    N, M, B = int(N), int(M), int(B) 
    for i in range(M):
        power, count = input().split()
        power = int(power)
        count = int(count)
        missile_power_list.append(power)
        missile_count_list.append(count)
        missile_dic[power] = count
        missile_dic = sorted(missile_dic)


    print(count, N, M, B,missile_power_list ,missile_count_list, missile_dic)
5